name: Build and Deploy to GKE

on:
  push:
    branches:
      - gke

permissions:
  id-token: write        # Necessário para autenticação OIDC no GCP
  contents: read         # Para checkout do código

jobs:
  build-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Autenticar com Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/152888038826/locations/global/workloadIdentityPools/github-pool-v3/providers/github-provider'
          service_account: 'github-ci@kubernetes-464719.iam.gserviceaccount.com'

      - name: Configurar gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Build da imagem Docker
        env:
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: us-east1-docker.pkg.dev/kubernetes-464719/pocgke/kubernetes-464719/pull_ecr/teste
        run: |
          docker build -t $REPOSITORY:$IMAGE_TAG .
      
      - name: Autenticar Docker no Artifact Registry
        run: |
          gcloud auth configure-docker REGION-docker.pkg.dev
      
      - name: Push da imagem para Artifact Registry
        env:
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: REGION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/IMAGE_NAME
        run: |
          docker push $REPOSITORY:$IMAGE_TAG

      - name: Configurar kubectl para GKE
        run: |
          gcloud container clusters get-credentials CLUSTER_NAME --zone CLUSTER_ZONE --project PROJECT_ID

      - name: Deploy no GKE (atualizar imagem do deployment)
        env:
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: REGION-docker.pkg.dev/PROJECT_ID/REPOSITORY_NAME/IMAGE_NAME
        run: |
          kubectl set image deployment/NOME_DEPLOY NOME_CONTAINER=$REPOSITORY:$IMAGE_TAG
